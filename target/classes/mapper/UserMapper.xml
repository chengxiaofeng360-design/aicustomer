<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aicustomer.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.aicustomer.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="department_id" property="departmentId" jdbcType="BIGINT"/>
        <result column="position" property="position" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="deleted" property="deleted" jdbcType="TINYINT"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, username, password, email, phone, real_name, department_id, position, status,
        last_login_time, create_time, update_time, create_by, update_by, deleted, version
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE id = #{id} AND deleted = 0
    </select>

    <select id="findByUsername" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE username = #{username} AND deleted = 0
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE deleted = 0
        <if test="username != null and username != ''">
            AND username LIKE CONCAT('%', #{username}, '%')
        </if>
        <if test="realName != null and realName != ''">
            AND real_name LIKE CONCAT('%', #{realName}, '%')
        </if>
        <if test="departmentId != null">
            AND department_id = #{departmentId}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        ORDER BY create_time DESC
    </select>

    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE deleted = 0
        <if test="user.username != null and user.username != ''">
            AND username LIKE CONCAT('%', #{user.username}, '%')
        </if>
        <if test="user.realName != null and user.realName != ''">
            AND real_name LIKE CONCAT('%', #{user.realName}, '%')
        </if>
        <if test="user.departmentId != null">
            AND department_id = #{user.departmentId}
        </if>
        <if test="user.status != null">
            AND status = #{user.status}
        </if>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectCount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM sys_user
        WHERE deleted = 0
        <if test="user.username != null and user.username != ''">
            AND username LIKE CONCAT('%', #{user.username}, '%')
        </if>
        <if test="user.realName != null and user.realName != ''">
            AND real_name LIKE CONCAT('%', #{user.realName}, '%')
        </if>
        <if test="user.departmentId != null">
            AND department_id = #{user.departmentId}
        </if>
        <if test="user.status != null">
            AND status = #{user.status}
        </if>
    </select>

    <insert id="insert" parameterType="com.aicustomer.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user (
            username, password, email, phone, real_name, department_id, position, status,
            last_login_time, create_time, update_time, create_by, update_by, deleted, version
        ) VALUES (
            #{username}, #{password}, #{email}, #{phone}, #{realName}, #{departmentId}, #{position}, #{status},
            #{lastLoginTime}, #{createTime}, #{updateTime}, #{createBy}, #{updateBy}, #{deleted}, #{version}
        )
    </insert>

    <update id="updateById" parameterType="com.aicustomer.entity.User">
        UPDATE sys_user
        SET username = #{username},
            password = #{password},
            email = #{email},
            phone = #{phone},
            real_name = #{realName},
            department_id = #{departmentId},
            position = #{position},
            status = #{status},
            last_login_time = #{lastLoginTime},
            update_time = #{updateTime},
            update_by = #{updateBy},
            version = version + 1
        WHERE id = #{id} AND deleted = 0
    </update>

    <update id="deleteById">
        UPDATE sys_user
        SET deleted = 1, update_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <update id="updateLastLoginTime">
        UPDATE sys_user
        SET last_login_time = #{lastLoginTime}, update_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <update id="updatePassword">
        UPDATE sys_user
        SET password = #{password}, update_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <update id="updateStatus">
        UPDATE sys_user
        SET status = #{status}, update_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

</mapper>