<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aicustomer.mapper.AiRecommendationMapper">

    <resultMap id="BaseResultMap" type="com.aicustomer.entity.AiRecommendation">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="customer_id" property="customerId" jdbcType="BIGINT"/>
        <result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
        <result column="recommendation_type" property="recommendationType" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="expected_effect" property="expectedEffect" jdbcType="VARCHAR"/>
        <result column="confidence" property="confidence" jdbcType="INTEGER"/>
        <result column="priority" property="priority" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="effect_score" property="effectScore" jdbcType="INTEGER"/>
        <result column="roi" property="roi" jdbcType="DECIMAL"/>
        <result column="risk_level" property="riskLevel" jdbcType="INTEGER"/>
        <result column="difficulty" property="difficulty" jdbcType="INTEGER"/>
        <result column="implementation_period" property="implementationPeriod" jdbcType="INTEGER"/>
        <result column="success_probability" property="successProbability" jdbcType="INTEGER"/>
        <result column="cost_estimate" property="costEstimate" jdbcType="DECIMAL"/>
        <result column="resource_requirements" property="resourceRequirements" jdbcType="VARCHAR"/>
        <result column="implementation_steps" property="implementationSteps" jdbcType="VARCHAR"/>
        <result column="expected_timeline" property="expectedTimeline" jdbcType="VARCHAR"/>
        <result column="success_metrics" property="successMetrics" jdbcType="VARCHAR"/>
        <result column="related_products" property="relatedProducts" jdbcType="VARCHAR"/>
        <result column="target_audience" property="targetAudience" jdbcType="VARCHAR"/>
        <result column="market_trends" property="marketTrends" jdbcType="VARCHAR"/>
        <result column="competitor_analysis" property="competitorAnalysis" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="deleted" property="deleted" jdbcType="TINYINT"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, customer_id, customer_name, recommendation_type, title, content, reason, expected_effect,
        confidence, priority, status, effect_score, roi, risk_level, difficulty, implementation_period,
        success_probability, cost_estimate, resource_requirements, implementation_steps, expected_timeline,
        success_metrics, related_products, target_audience, market_trends, competitor_analysis,
        create_time, update_time, create_by, update_by, deleted, version
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_recommendation
        WHERE id = #{id} AND deleted = 0
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_recommendation
        WHERE deleted = 0
        <if test="recommendation.customerId != null">
            AND customer_id = #{recommendation.customerId}
        </if>
        <if test="recommendation.recommendationType != null">
            AND recommendation_type = #{recommendation.recommendationType}
        </if>
        <if test="recommendation.status != null">
            AND status = #{recommendation.status}
        </if>
        <if test="recommendation.priority != null">
            AND priority = #{recommendation.priority}
        </if>
        ORDER BY create_time DESC
    </select>

    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_recommendation
        WHERE deleted = 0
        <if test="recommendation.customerId != null">
            AND customer_id = #{recommendation.customerId}
        </if>
        <if test="recommendation.recommendationType != null">
            AND recommendation_type = #{recommendation.recommendationType}
        </if>
        <if test="recommendation.status != null">
            AND status = #{recommendation.status}
        </if>
        <if test="recommendation.priority != null">
            AND priority = #{recommendation.priority}
        </if>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectCount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM ai_recommendation
        WHERE deleted = 0
        <if test="recommendation.customerId != null">
            AND customer_id = #{recommendation.customerId}
        </if>
        <if test="recommendation.recommendationType != null">
            AND recommendation_type = #{recommendation.recommendationType}
        </if>
        <if test="recommendation.status != null">
            AND status = #{recommendation.status}
        </if>
        <if test="recommendation.priority != null">
            AND priority = #{recommendation.priority}
        </if>
    </select>

    <insert id="insert" parameterType="com.aicustomer.entity.AiRecommendation" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ai_recommendation (
            customer_id, customer_name, recommendation_type, title, content, reason, expected_effect,
            confidence, priority, status, effect_score, roi, risk_level, difficulty, implementation_period,
            success_probability, cost_estimate, resource_requirements, implementation_steps, expected_timeline,
            success_metrics, related_products, target_audience, market_trends, competitor_analysis,
            create_time, update_time, create_by, update_by, deleted, version
        ) VALUES (
            #{customerId}, #{customerName}, #{recommendationType}, #{title}, #{content}, #{reason}, #{expectedEffect},
            #{confidence}, #{priority}, #{status}, #{effectScore}, #{roi}, #{riskLevel}, #{difficulty}, #{implementationPeriod},
            #{successProbability}, #{costEstimate}, #{resourceRequirements}, #{implementationSteps}, #{expectedTimeline},
            #{successMetrics}, #{relatedProducts}, #{targetAudience}, #{marketTrends}, #{competitorAnalysis},
            #{createTime}, #{updateTime}, #{createBy}, #{updateBy}, #{deleted}, #{version}
        )
    </insert>

    <update id="updateById" parameterType="com.aicustomer.entity.AiRecommendation">
        UPDATE ai_recommendation
        SET customer_id = #{customerId},
            customer_name = #{customerName},
            recommendation_type = #{recommendationType},
            title = #{title},
            content = #{content},
            reason = #{reason},
            expected_effect = #{expectedEffect},
            confidence = #{confidence},
            priority = #{priority},
            status = #{status},
            effect_score = #{effectScore},
            roi = #{roi},
            risk_level = #{riskLevel},
            difficulty = #{difficulty},
            implementation_period = #{implementationPeriod},
            success_probability = #{successProbability},
            cost_estimate = #{costEstimate},
            resource_requirements = #{resourceRequirements},
            implementation_steps = #{implementationSteps},
            expected_timeline = #{expectedTimeline},
            success_metrics = #{successMetrics},
            related_products = #{relatedProducts},
            target_audience = #{targetAudience},
            market_trends = #{marketTrends},
            competitor_analysis = #{competitorAnalysis},
            update_time = #{updateTime},
            update_by = #{updateBy},
            version = version + 1
        WHERE id = #{id} AND deleted = 0
    </update>

    <update id="deleteById">
        UPDATE ai_recommendation
        SET deleted = 1, update_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <select id="selectByCustomerId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_recommendation
        WHERE customer_id = #{customerId} AND deleted = 0
        ORDER BY create_time DESC
    </select>

    <update id="adoptRecommendation">
        UPDATE ai_recommendation
        SET status = 2, update_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <update id="rejectRecommendation">
        UPDATE ai_recommendation
        SET status = 3, update_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <select id="selectStatistics" resultType="java.util.Map">
        SELECT
            COUNT(*) as totalRecommendations,
            COUNT(CASE WHEN recommendation_type = 1 THEN 1 END) as productRecommendations,
            COUNT(CASE WHEN recommendation_type = 2 THEN 1 END) as serviceRecommendations,
            COUNT(CASE WHEN recommendation_type = 3 THEN 1 END) as marketingRecommendations,
            COUNT(CASE WHEN recommendation_type = 4 THEN 1 END) as maintenanceRecommendations,
            COUNT(CASE WHEN recommendation_type = 5 THEN 1 END) as riskControlRecommendations,
            AVG(confidence) as avgConfidence,
            AVG(effect_score) as avgEffectScore,
            COUNT(CASE WHEN priority = 3 THEN 1 END) as highPriorityCount,
            COUNT(CASE WHEN status = 2 THEN 1 END) as adoptedCount,
            COUNT(CASE WHEN status = 3 THEN 1 END) as rejectedCount
        FROM ai_recommendation
        WHERE deleted = 0
        <if test="customerId != null">
            AND customer_id = #{customerId}
        </if>
        <if test="startTime != null">
            AND create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
    </select>

</mapper>
