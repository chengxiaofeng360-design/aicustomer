<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aicustomer.mapper.AiChatMapper">

    <resultMap id="BaseResultMap" type="com.aicustomer.entity.AiChat">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="BIGINT"/>
        <result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
        <result column="message_type" property="messageType" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="reply_content" property="replyContent" jdbcType="VARCHAR"/>
        <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP"/>
        <result column="session_id" property="sessionId" jdbcType="VARCHAR"/>
        <result column="context" property="context" jdbcType="VARCHAR"/>
        <result column="intent" property="intent" jdbcType="VARCHAR"/>
        <result column="confidence" property="confidence" jdbcType="DECIMAL"/>
        <result column="sentiment" property="sentiment" jdbcType="INTEGER"/>
        <result column="keywords" property="keywords" jdbcType="VARCHAR"/>
        <result column="is_satisfied" property="isSatisfied" jdbcType="BOOLEAN"/>
        <result column="satisfaction_score" property="satisfactionScore" jdbcType="INTEGER"/>
        <result column="feedback" property="feedback" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="deleted" property="deleted" jdbcType="TINYINT"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, user_name, customer_id, customer_name, message_type, content, reply_content,
        reply_time, session_id, context, intent, confidence, sentiment, keywords, is_satisfied,
        satisfaction_score, feedback, create_time, update_time, create_by, update_by, deleted, version
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_chat
        WHERE id = #{id} AND deleted = 0
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_chat
        WHERE deleted = 0
        <if test="chat.userId != null">
            AND user_id = #{chat.userId}
        </if>
        <if test="chat.customerId != null">
            AND customer_id = #{chat.customerId}
        </if>
        <if test="chat.messageType != null">
            AND message_type = #{chat.messageType}
        </if>
        <if test="chat.sessionId != null and chat.sessionId != ''">
            AND session_id = #{chat.sessionId}
        </if>
        ORDER BY create_time DESC
    </select>

    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_chat
        WHERE deleted = 0
        <if test="chat.userId != null">
            AND user_id = #{chat.userId}
        </if>
        <if test="chat.customerId != null">
            AND customer_id = #{chat.customerId}
        </if>
        <if test="chat.messageType != null">
            AND message_type = #{chat.messageType}
        </if>
        <if test="chat.sessionId != null and chat.sessionId != ''">
            AND session_id = #{chat.sessionId}
        </if>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectCount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM ai_chat
        WHERE deleted = 0
        <if test="chat.userId != null">
            AND user_id = #{chat.userId}
        </if>
        <if test="chat.customerId != null">
            AND customer_id = #{chat.customerId}
        </if>
        <if test="chat.messageType != null">
            AND message_type = #{chat.messageType}
        </if>
        <if test="chat.sessionId != null and chat.sessionId != ''">
            AND session_id = #{chat.sessionId}
        </if>
    </select>

    <insert id="insert" parameterType="com.aicustomer.entity.AiChat" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ai_chat (
            user_id, user_name, customer_id, customer_name, message_type, content, reply_content,
            reply_time, session_id, context, intent, confidence, sentiment, keywords, is_satisfied,
            satisfaction_score, feedback, create_time, update_time, create_by, update_by, deleted, version
        ) VALUES (
            #{userId}, #{userName}, #{customerId}, #{customerName}, #{messageType}, #{content}, #{replyContent},
            #{replyTime}, #{sessionId}, #{context}, #{intent}, #{confidence}, #{sentiment}, #{keywords}, #{isSatisfied},
            #{satisfactionScore}, #{feedback}, #{createTime}, #{updateTime}, #{createBy}, #{updateBy}, #{deleted}, #{version}
        )
    </insert>

    <update id="updateById" parameterType="com.aicustomer.entity.AiChat">
        UPDATE ai_chat
        SET user_id = #{userId},
            user_name = #{userName},
            customer_id = #{customerId},
            customer_name = #{customerName},
            message_type = #{messageType},
            content = #{content},
            reply_content = #{replyContent},
            reply_time = #{replyTime},
            session_id = #{sessionId},
            context = #{context},
            intent = #{intent},
            confidence = #{confidence},
            sentiment = #{sentiment},
            keywords = #{keywords},
            is_satisfied = #{isSatisfied},
            satisfaction_score = #{satisfactionScore},
            feedback = #{feedback},
            update_time = #{updateTime},
            update_by = #{updateBy},
            version = version + 1
        WHERE id = #{id} AND deleted = 0
    </update>

    <update id="deleteById">
        UPDATE ai_chat
        SET deleted = 1, update_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <select id="selectBySessionId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_chat
        WHERE session_id = #{sessionId} AND deleted = 0
        ORDER BY create_time ASC
    </select>

    <select id="selectByCustomerId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ai_chat
        WHERE customer_id = #{customerId} AND deleted = 0
        ORDER BY create_time DESC
    </select>

    <select id="selectStatistics" resultType="java.util.Map">
        SELECT
            COUNT(*) as totalChats,
            COUNT(CASE WHEN message_type = 1 THEN 1 END) as userMessages,
            COUNT(CASE WHEN message_type = 2 THEN 1 END) as aiReplies,
            AVG(satisfaction_score) as avgSatisfaction,
            COUNT(CASE WHEN is_satisfied = 1 THEN 1 END) as satisfiedCount
        FROM ai_chat
        WHERE deleted = 0
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="customerId != null">
            AND customer_id = #{customerId}
        </if>
        <if test="startTime != null">
            AND create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
    </select>

</mapper>
