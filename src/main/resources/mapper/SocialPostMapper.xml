<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aicustomer.mapper.SocialPostMapper">

    <select id="findPosts" resultType="com.aicustomer.entity.SocialPost">
        SELECT 
            sp.*,
            ca.nickname as customerNickname,
            ca.avatar as customerAvatar,
            CASE WHEN sl.id IS NOT NULL THEN 1 ELSE 0 END as isLiked
        FROM social_post sp
        LEFT JOIN customer_account ca ON sp.customer_account_id = ca.id
        LEFT JOIN social_like sl ON sp.id = sl.target_id AND sl.target_type = 1 AND sl.customer_account_id = #{customerAccountId}
        WHERE sp.status = 1
        ORDER BY sp.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="findById" parameterType="long" resultType="com.aicustomer.entity.SocialPost">
        SELECT 
            sp.*,
            ca.nickname as customerNickname,
            ca.avatar as customerAvatar
        FROM social_post sp
        LEFT JOIN customer_account ca ON sp.customer_account_id = ca.id
        WHERE sp.id = #{id} AND sp.status = 1
    </select>

    <insert id="insert" parameterType="com.aicustomer.entity.SocialPost" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO social_post (
            customer_account_id, customer_id, content, images, tags, post_type, 
            visibility, like_count, comment_count, share_count, status, 
            create_time, update_time
        ) VALUES (
            #{customerAccountId}, #{customerId}, #{content}, #{images}, #{tags}, #{postType},
            #{visibility}, #{likeCount}, #{commentCount}, #{shareCount}, #{status},
            #{createTime}, #{updateTime}
        )
    </insert>

    <update id="update" parameterType="com.aicustomer.entity.SocialPost">
        UPDATE social_post SET
            content = #{content},
            images = #{images},
            post_type = #{postType},
            visibility = #{visibility},
            status = #{status},
            update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <update id="delete">
        UPDATE social_post SET status = 2 WHERE id = #{id}
    </update>

    <update id="updateLikeCount">
        UPDATE social_post SET like_count = like_count + #{increment} WHERE id = #{id}
    </update>

    <update id="updateCommentCount">
        UPDATE social_post SET comment_count = comment_count + #{increment} WHERE id = #{id}
    </update>

    <select id="findByUserId" parameterType="long" resultType="com.aicustomer.entity.SocialPost">
        SELECT 
            sp.*,
            ca.nickname as customerNickname,
            ca.avatar as customerAvatar
        FROM social_post sp
        LEFT JOIN customer_account ca ON sp.customer_account_id = ca.id
        WHERE sp.customer_account_id = #{userId} AND sp.status = 1
        ORDER BY sp.create_time DESC
    </select>

</mapper>
